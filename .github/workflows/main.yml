# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Cache vendor
        uses: actions/cache@v2
        env:
          cache-name: cache-vendor
        with:
          path: ~/vendor
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: docker pull
        run: docker-compose -f docker-compose.ci.yml pull
      - name: docker build
        shell: bash
        run: docker-compose -f docker-compose.ci.yml up -d --build
      - name: composer install
        run: docker-compose -f docker-compose.ci.yml exec -T app composer install
      - name: phpunit
        run: docker-compose -f docker-compose.ci.yml exec -T app ./vendor/bin/phpunit
